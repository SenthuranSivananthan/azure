{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appName": {
            "type": "string"
        },
        "pingName": {
            "type": "string"
        },
        "pingURL": {
            "type": "string"
        },
        "pingText": {
            "type": "string"
        },
        "alertName": {
            "type": "string"
        }
    },
    "variables": {
        "pingTestName": "[toLower(parameters('pingName'))]",
        "pingAlertRuleName": "[toLower(parameters('alertName'))]"
    },
    "resources": [
        { //
            // Availability test: part 1 configures the test
            //
            "name": "[variables('pingTestName')]",
            "type": "Microsoft.Insights/webtests",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Insights/components', parameters('appName')))]": "Resource"
            },
            "properties": {
                "Name": "[variables('pingTestName')]",
                "Description": "Basic ping test",
                "Enabled": true,
                "Frequency": 900, // 15 minutes
                "Timeout": 120, // 2 minutes
                "Kind": "ping", // single URL test
                "RetryEnabled": true,
                "Locations": [
                    {
                        "Id": "us-va-ash-azr"
                    },
                    {
                        "Id": "emea-nl-ams-azr"
                    },
                    {
                        "Id": "apac-jp-kaw-edge"
                    }
                ],
                "Configuration": {
                    "WebTest": "[concat('<WebTest   Name=\"', variables('pingTestName'), '\"   Enabled=\"True\"         CssProjectStructure=\"\"    CssIteration=\"\"  Timeout=\"120\"  WorkItemIds=\"\"         xmlns=\"http://microsoft.com/schemas/VisualStudio/TeamTest/2010\"         Description=\"\"  CredentialUserName=\"\"  CredentialPassword=\"\"         PreAuthenticate=\"True\"  Proxy=\"default\"  StopOnError=\"False\"         RecordedResultFile=\"\"  ResultsLocale=\"\">  <Items>  <Request Method=\"GET\"    Version=\"1.1\"  Url=\"', parameters('pingURL'),   '\" ThinkTime=\"0\"  Timeout=\"300\" ParseDependentRequests=\"True\"         FollowRedirects=\"True\" RecordResult=\"True\" Cache=\"False\"         ResponseTimeGoal=\"0\"  Encoding=\"utf-8\"  ExpectedHttpStatusCode=\"200\"         ExpectedResponseUrl=\"\" ReportingName=\"\" IgnoreHttpStatusCode=\"False\" />        </Items>  <ValidationRules> <ValidationRule  Classname=\"Microsoft.VisualStudio.TestTools.WebTesting.Rules.ValidationRuleFindText, Microsoft.VisualStudio.QualityTools.WebTestFramework, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a\" DisplayName=\"Find Text\"         Description=\"Verifies the existence of the specified text in the response.\"         Level=\"High\"  ExectuionOrder=\"BeforeDependents\">  <RuleParameters>        <RuleParameter Name=\"FindText\" Value=\"',   parameters('pingText'), '\" />  <RuleParameter Name=\"IgnoreCase\" Value=\"False\" />  <RuleParameter Name=\"UseRegularExpression\" Value=\"False\" />  <RuleParameter Name=\"PassIfTextFound\" Value=\"True\" />  </RuleParameters> </ValidationRule>  </ValidationRules>  </WebTest>')]"
                },
                "SyntheticMonitorId": "[variables('pingTestName')]"
            }
        },
        {
            //
            // Availability test: part 2, the alert rule
            //
            "name": "[variables('pingAlertRuleName')]",
            "type": "Microsoft.Insights/alertrules",
            "apiVersion": "2014-04-01",
            "location": "[resourceGroup().location]",
            "dependsOn": [
                "[resourceId('Microsoft.Insights/webtests', variables('pingTestName'))]"
            ],
            "tags": {
                "[concat('hidden-link:', resourceId('Microsoft.Insights/components', parameters('appName')))]": "Resource",
                "[concat('hidden-link:', resourceId('Microsoft.Insights/webtests', variables('pingTestName')))]": "Resource"
            },
            "properties": {
                "name": "[variables('pingAlertRuleName')]",
                "description": "alert for web test",
                "isEnabled": true,
                "condition": {
                    "$type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.LocationThresholdRuleCondition, Microsoft.WindowsAzure.Management.Mon.Client",
                    "odata.type": "Microsoft.Azure.Management.Insights.Models.LocationThresholdRuleCondition",
                    "dataSource": {
                        "$type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleMetricDataSource, Microsoft.WindowsAzure.Management.Mon.Client",
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleMetricDataSource",
                        "resourceUri": "[resourceId('microsoft.insights/webtests', variables('pingTestName'))]",
                        "metricName": "GSMT_AvRaW"
                    },
                    "windowSize": "PT15M", // Take action if changed state for 15 minutes
                    "failedLocationCount": 2
                },
                "actions": [
                    {
                        "$type": "Microsoft.WindowsAzure.Management.Monitoring.Alerts.Models.RuleEmailAction, Microsoft.WindowsAzure.Management.Mon.Client",
                        "odata.type": "Microsoft.Azure.Management.Insights.Models.RuleEmailAction",
                        "sendToServiceOwners": true,
                        "customEmails": []
                    }
                ]
            }
        }
    ]
}